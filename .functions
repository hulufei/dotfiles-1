# Start an HTTP server from a directory, optionally specifying the port
function server() {
    local port="${1:-8000}"
    open "http://localhost:${port}/"

    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
    python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# git log with per-commit cmd-clickable GitHub URLs (iTerm)
function gf() {
    local remote="$(git remote -v | awk '/^origin.*\(push\)$/ {print $2}')"
    [[ "$remote" ]] || return
    local user_repo="$(echo "$remote" | perl -pe 's/.*://;s/\.git$//')"
    git log $* --name-status --color | awk "$(cat <<AWK
        /^.*commit [0-9a-f]{40}/ {sha=substr(\$2,1,7)}
        /^[MA]\t/ {printf "%s\thttps://github.com/$user_repo/blob/%s/%s\n", \$1, sha, \$2; next}
        /.*/ {print \$0}
    AWK
        )" | less -F
}

function json() {
    if [ -p /dev/stdin ]; then
        # piping, e.g. `echo '{"foo":42}' | json`
        python -mjson.tool | pygmentize -l javascript
    else
        # e.g. `json '{"foo":42}'`
        python -mjson.tool <<< "$*" | pygmentize -l javascript
    fi
}

# Lists the files in the current dir and when they were last (git) modified
function modified() {
    for a in $(ls); do
        git log --pretty=format:"%h%x09%an%x09%ar%x09%C(blue)$a%C(reset)" -1 -- "$a";
    done
}
