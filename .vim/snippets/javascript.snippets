snippet jsx
	import React, {Component} from 'react';

	const styles = {
		container: {}
	};

	export default class ${1:Thing} extends Component {
		render() : Component {
			return ${0}<div style={styles.container} />;
		}
	}
snippet jsxpure
	import React, {Component} from 'react';
	import PureRender from 'react-pure-render';

	const styles = {
		container: {}
	};

	@PureRender
	export default class ${1:Thing} extends Component {
		render() : Component {
			return ${0}<div style={styles.container} />;
		}
	}
snippet action
	export function ${1:action}(${2:value}) {
		return {
			type: ${3},
			payload: $2
		};
	}
snippet reducer
	export default function (state = {}, action) {
		switch (action.type) {
			${0}
			default:
				return state;
		}
	}
snippet store
	'use strict';

	import {EventEmitter} from 'events';

	import Dispatcher from '../dispatcher';

	class ${1:ThingStore} extends EventEmitter {
		constructor() {
			super();

			this.dispatchToken =
				Dispatcher.register(this._dispatchTokenFn.bind(this));
		}

		_dispatchTokenFn(action) {
			switch (action.name) {
				${0}
			}
		}
	}

	export default new $1();
snippet ngjsx
	angular.module('react-components')
		.factory('$1', function () {
			const { Component, PropTypes } = React;

			return class ${1} extends Component {
				static propTypes = {
				}

				render() : Component {
					return <div>${0}</div>;
				}
			}
		});
snippet log
	console.log(${0});
